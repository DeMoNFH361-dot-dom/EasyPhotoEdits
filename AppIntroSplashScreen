package com.app.droidipchanger.droidipchanger

import android.content.Intent
import android.net.Uri
import android.os.Bundle
import android.os.Handler
import android.support.v7.app.AppCompatActivity
import android.util.Log
import android.widget.MediaController
import kotlinx.android.synthetic.main.activity_intro_to_ip_changer.*

class IntroToIpChanger : AppCompatActivity() {

    private var position = 0
    private var mediaController: MediaController? = null
    private var TAGs = "VideoPlayer"

    private var mDelayHandler: Handler? = null
    private val SPLASH_DELAY: Long = 5000 //5 seconds

    internal val mRunnable: Runnable = Runnable {
        if (!isFinishing) {

            val intent = Intent(this, Intro::class.java)
            startActivity(intent)
            finish()
        }
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_intro_to_ip_changer)

        //Initialize the Handler
        mDelayHandler = Handler()

        //Navigate with delay
        mDelayHandler!!.postDelayed(mRunnable, SPLASH_DELAY)

        introtwovid.setMediaController(null)

        try {
            introtwovid.setMediaController(mediaController)
            introtwovid.setVideoURI(Uri.parse("android.resource://" + packageName + "/" + R.raw.introtwovid))

        } catch (e: Exception) {
            Log.e("Error", e.message)
        }

        introtwovid.requestFocus()
        introtwovid.setOnPreparedListener { mp ->
            mp.isLooping = true
            Log.i(TAGs, "Duration = " + introtwovid.duration)
            introtwovid.seekTo(position)
            if (position == 0) {
                introtwovid.start()
            }
        }
    }




    public override fun onDestroy() {

        if (mDelayHandler != null) {
         mDelayHandler!!.removeCallbacks(mRunnable)
        }

        super.onDestroy()
    }
}
